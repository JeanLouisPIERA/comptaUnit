<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- =============================================================== -->
    <!-- Project informations -->
    <!-- =============================================================== -->
    <!-- ===== Parent ===== -->
    <parent>
        <groupId>com.dummy.myerp</groupId>
        <artifactId>myerp</artifactId>
        <version>1.x.x-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <!-- ===== Maven ===== -->
    <artifactId>myerp-business</artifactId>

    <!-- ===== General information ===== -->
    <name>${project.artifactId}</name>


    <!-- =============================================================== -->
    <!-- Distrubution management -->
    <!-- =============================================================== -->
    <distributionManagement>
        <site>
            <id>site</id>
            <name>site-doc</name>
            <url>file://${basedir}/../target/site-doc/${project.artifactId}/</url>
        </site>
    </distributionManagement>


    <!-- =============================================================== -->
    <!-- Properties -->
    <!-- =============================================================== -->
    <properties>
    
    <!-- Used to locate the profile specific configuration file. >
        <jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.execution.data.file>
        <jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.execution.data.file-->
    
    </properties>


    <!-- =============================================================== -->
    <!-- Dependencies -->
    <!-- =============================================================== -->
    <dependencies>
        <!-- ===== Modules ===== -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>myerp-model</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>myerp-consumer</artifactId>
        </dependency>
        

        <!-- ===== Spring JDBC/Tx ===== -->
        <!-- spring-tx : transaction, JCA, DAO -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>

        <!-- ===== JSR 303 - Bean validation ===== -->
        <!-- implementation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>


        <!-- ========== Test Dependencies ========== -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter -->
			<dependency>
			    <groupId>org.junit.jupiter</groupId>
			    <artifactId>junit-jupiter</artifactId>
			    <scope>test</scope>
			</dependency>
        
        <!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api 
        the JAXB library (Java Architecture for XML Binding) is missing in the classpath. 
        JAXB is included in Java SE 10 or older, but it is removed from Java SE from Java 11 or newer –moved to Java EE under Jakarta EE project.
        we encounter the java.lang.NoClassDefFoundError when starting the server Apache Tomcat for this reason
        -->
		<dependency>
		    <groupId>javax.xml.bind</groupId>
		    <artifactId>jaxb-api</artifactId>
		    <version>2.4.0-b180830.0359</version>
		</dependency>
        
        <!-- ===== Database (pour les tests) ===== -->
        <!-- Pool de connexion -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Drivers JDBC PostgreSQL -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <!-- =============================================================== -->
    <!-- Profiles -->
    <!-- =============================================================== -->
    <profiles>
        <!-- Profile utilisé pour lancer les tests d'intégration de la couche Business -->
        <profile>
            <id>test-business</id>
            <build>
                <plugins>
                    <!-- Ajout du répertoire src/test-business/java en tant que source de test du module -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-test-source</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/test-business/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test-business/resources</directory>
                    </testResource>
                </testResources>
            </build>
        </profile>
    </profiles>


    <!-- =============================================================== -->
    <!-- Build -->
    <!-- =============================================================== -->
    <build>
    <plugins>
    <!-- ===== Coverage / Reporting ===== -->
                <plugin>
				    <groupId>org.jacoco</groupId>
				    <artifactId>jacoco-maven-plugin</artifactId>
				    <version>0.8.5</version>
				    
				    <executions>
				        <!--
				            Prepares the property pointing to the JaCoCo runtime agent which
				            is passed as VM argument when Maven the Surefire plugin is executed.
				        -->
				        <execution>
				            <id>pre-unit-test</id>
				            <goals>
				                <goal>prepare-agent</goal>
				            </goals>
				            <configuration>
				                <!-- Sets the path to the file which contains the execution data. -->
				                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
				                <!--
				                    Sets the name of the property containing the settings
				                    for JaCoCo runtime agent.
				                -->
				                <propertyName>surefireArgLine</propertyName>
				            </configuration>
				        </execution>
				        
				        <!--
				            Ensures that the code coverage report for unit tests is created after
				            unit tests have been run.
				        -->
				        <execution>
				            <id>post-unit-test</id>
				            <phase>test</phase>
				            <goals>
				                <goal>report</goal>
				            </goals>
				            <configuration>
				                <!-- Sets the path to the file which contains the execution data. -->
				                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
				                <!-- Sets the output directory for the code coverage report. -->
				                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
				            </configuration>
				        </execution>
				        
				    </executions>
				    
				</plugin>
    
    </plugins>
    </build>
</project>
