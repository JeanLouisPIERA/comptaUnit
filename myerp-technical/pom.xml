<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- =============================================================== -->
    <!-- Project informations -->
    <!-- =============================================================== -->
    <!-- ===== Parent ===== -->
    <parent>
        <groupId>com.dummy.myerp</groupId>
        <artifactId>myerp</artifactId>
        <version>1.x.x-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <!-- ===== Maven ===== -->
    <artifactId>myerp-technical</artifactId>

    <!-- ===== General information ===== -->
    <name>${project.artifactId}</name>


    <!-- =============================================================== -->
    <!-- Distrubution management -->
    <!-- =============================================================== -->
    <distributionManagement>
        <site>
            <id>site</id>
            <name>site-doc</name>
            <url>file://${basedir}/../target/site-doc/${project.artifactId}/</url>
        </site>
    </distributionManagement>


    <!-- =============================================================== -->
    <!-- Properties -->
    <!-- =============================================================== -->
    <properties>
    </properties>


    <!-- =============================================================== -->
    <!-- Dependencies -->
    <!-- =============================================================== -->
    <dependencies>
    
        <!-- ===== Log4j ===== -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <!-- Commons Logging Bridge -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
        </dependency>
        <!-- Log4j 2 SLF4J Binding -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>


        <!-- ===== Apache commons ===== -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>


        <!-- ===== Spring IOC ===== -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>


        <!-- ===== JSR 303 - Bean validation ===== -->
        <!-- interface -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>


        <!-- ========== Test Dependencies ========== -->
        <!-- ===== Tests ===== -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
			    <groupId>org.mockito</groupId>
			    <artifactId>mockito-all</artifactId>
			    <scope>test</scope>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter -->
			<dependency>
			    <groupId>org.mockito</groupId>
			    <artifactId>mockito-junit-jupiter</artifactId>
			    <scope>test</scope>
			</dependency>	
			
			<!-- dependency>
			    <groupId>org.junit.jupiter</groupId>
			    <artifactId>junit-jupiter-engine</artifactId>
			    <scope>test</scope>
			</dependency-->
			
			<dependency>
			    <groupId>org.mockito</groupId>
			    <artifactId>mockito-core</artifactId>
			    <scope>test</scope>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params -->
				<dependency>
				    <groupId>org.junit.jupiter</groupId>
				    <artifactId>junit-jupiter-params</artifactId>
				    <version>5.7.0</version>
				    <scope>test</scope>
				</dependency>
				
				<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter -->
					<dependency>
					    <groupId>org.junit.jupiter</groupId>
					    <artifactId>junit-jupiter</artifactId>
					    <scope>test</scope>
					</dependency>
		
			<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api 
		        the JAXB library (Java Architecture for XML Binding) is missing in the classpath. 
		        JAXB is included in Java SE 10 or older, but it is removed from Java SE from Java 11 or newer –moved to Java EE under Jakarta EE project.
		        we encounter the java.lang.NoClassDefFoundError when starting the server Apache Tomcat for this reason
		        -->
				<dependency>
				    <groupId>javax.xml.bind</groupId>
				    <artifactId>jaxb-api</artifactId>
				    <version>2.4.0-b180830.0359</version>
				</dependency>

        <!-- ===== JSR 303 - Bean validation ===== -->
        <!-- implementation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>test</scope>
        </dependency>
</dependencies>


    <!-- =============================================================== -->
    <!-- Build -->
    <!-- =============================================================== -->
    <build>
    <plugins>
    
	 <!-- ===== Test / Reporting ===== -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    
                    <configuration>
				        <!-- Sets the VM argument line used when unit tests are run. -->
				        <argLine>${surefireArgLine}</argLine>
				        <!-- Skips unit tests if the value of skip.unit.tests property is true-->
				        <skipTests>${skip.unit.tests}</skipTests>
				        <!-- Excludes integration tests when unit tests are run. -->
				        <excludes>
				            <exclude>**/*Test.java</exclude>
				            <exclude>**/*IT.java</exclude>
				        </excludes>
				    </configuration>
				    
				    <executions>
					    <execution>
					      <id>unittests</id>
					      <phase>test</phase>
					      <goals>
					        <goal>test</goal>
					      </goals>
					      <configuration>
					        <skipTests>false</skipTests>
					        <includes>
					          <include>**/*UT.java</include>
					        </includes>
					      </configuration>
					    </execution>
					  </executions>
                </plugin>

				<plugin>
			      <groupId>org.apache.maven.plugins</groupId>
			      <artifactId>maven-failsafe-plugin</artifactId>
			      
			     <dependencies>
	                <dependency>
	                    <groupId>org.junit.jupiter</groupId>
	                    <artifactId>junit-jupiter-engine</artifactId>
	                    <version>5.3.2</version>
	                </dependency>
	            </dependencies>
			      
			      <configuration>
			        <argLine>${failsafeArgline}</argLine>
			      </configuration>
			      <executions>
			        <execution>
					      <id>inttests</id>
					      <phase>integration-test</phase>
					      <goals>
					        <goal>integration-test</goal>
					      </goals>
					      <configuration>
					        <skipTests>false</skipTests>
					        <includes>
					           <include>**/*Test.java</include>
					           <include>**/*IT.java</include>
					        </includes>
					      </configuration>
					    </execution>
                 </executions>
    			</plugin>
	
    
    <!--xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->             
                
                <!-- ===== Coverage / Reporting ===== -->
                
                <plugin>
			      <groupId>org.jacoco</groupId>
			      <artifactId>jacoco-maven-plugin</artifactId>
	     
			      <executions>
			      
			      <!-- =====Configuring jacoco unit test coverage data===== -->
			      <execution>
					  <id>before-unit-test-execution</id>
					  <goals>
					    <goal>prepare-agent</goal>
					  </goals>
					  <configuration>
					    <destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
					    <!-- propertyName>surefire.jacoco.args</propertyName-->
					    <propertyName>surefireArgLine</propertyName>
					  </configuration>
					</execution>
					
					<!-- =====  Generating the unit test coverage report===== -->
                	<execution>
					  <id>after-unit-test-execution</id>
					  <phase>test</phase>
					  <goals>
					    <goal>report</goal>
					  </goals>
					  <configuration>
					    <dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
					    <!--outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory-->
					    <outputDirectory>${project.build.directory}/site/jacoco-unit-test-coverage-report</outputDirectory>
					  </configuration>
					</execution>
                
                <!-- ===== Configuring jacoco’s integration coverage report ===== -->
                
                	<execution>
						  <id>before-integration-test-execution</id>
						  <phase>pre-integration-test</phase>
						  <goals>
						    <goal>prepare-agent</goal>
						  </goals>
						  <configuration>
						    <destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
						    <propertyName>failsafeArgline</propertyName>
						  </configuration>
						</execution>
						
						<execution>
						  <id>after-integration-test-execution</id>
						  <phase>post-integration-test</phase>
						  <goals>
						    <goal>report</goal>
						  </goals>
						  <configuration>
						    <dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
						  <!--outputDirectory>${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report</outputDirectory-->
						  <outputDirectory>${project.build.directory}/site/jacoco-integration-test-coverage-report</outputDirectory>
						  </configuration>
						</execution>
                
                <!-- ===== Merging unit and integration test coverage data ===== -->
                		<execution>
						  <id>merge-unit-and-integration</id>
						    <phase>post-integration-test</phase>
						      <goals>
						        <goal>merge</goal>
						      </goals>
						      <configuration>
						      <fileSets>
						        <fileSet>
						          <directory>${project.build.directory}/jacoco-output/</directory>
						          <includes>
						            <include>*.exec</include>
						          </includes>
						        </fileSet>
						      </fileSets>
						      <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
						    </configuration>
						  </execution>
						             
                <!-- ===== Generating the merged unit and integration test coverage report ===== -->
                
		                <execution>
						  <id>create-merged-report</id>
						  <phase>post-integration-test</phase>
						  <goals>
						    <goal>report</goal>
						  </goals>
						  <configuration>
						    <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
						    <!-- outputDirectory>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report</outputDirectory-->
						  	<outputDirectory>${project.build.directory}/site/jacoco-merged-test-coverage-report</outputDirectory>
						  </configuration>
						</execution>
                
                		<!-- Ensures that the minimum coverage average rate is 75%. -->
				        <execution>
							<id>jacoco-check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
							<dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
			      			<!-- sourceEncoding>${project.build.sourceEncoding}</sourceEncoding-->
					    <rules>
					      <rule>
					        <element>BUNDLE</element>
					        <excludes>
					          <exclude>*Test</exclude>
					          <exclude>*IT</exclude>
					          <exclude>*UT</exclude>
					        </excludes>
					        <limits>
					          <limit>
					            <counter>LINE</counter>
					            <value>COVEREDRATIO</value>
					            <minimum>0.75</minimum>
					          </limit>
					        </limits>
					      </rule>
					    </rules>
					       
				  	</configuration>
							
				</execution>
                		
			 </executions>
			        
		</plugin>
 
    </plugins>
 
  </build>
    
</project>
